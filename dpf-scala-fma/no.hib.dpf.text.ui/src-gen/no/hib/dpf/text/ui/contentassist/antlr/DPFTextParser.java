/*
* generated by Xtext
*/
package no.hib.dpf.text.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import no.hib.dpf.text.services.DPFTextGrammarAccess;

public class DPFTextParser extends AbstractContentAssistParser {
	
	@Inject
	private DPFTextGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected no.hib.dpf.text.ui.contentassist.antlr.internal.InternalDPFTextParser createParser() {
		no.hib.dpf.text.ui.contentassist.antlr.internal.InternalDPFTextParser result = new no.hib.dpf.text.ui.contentassist.antlr.internal.InternalDPFTextParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getVALUEAccess().getAlternatives(), "rule__VALUE__Alternatives");
					put(grammarAccess.getDefinitionAccess().getAlternatives(), "rule__Definition__Alternatives");
					put(grammarAccess.getMappingAccess().getAlternatives(), "rule__Mapping__Alternatives");
					put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
					put(grammarAccess.getArrowsAccess().getAlternatives(), "rule__Arrows__Alternatives");
					put(grammarAccess.getArrowAccess().getAlternatives(), "rule__Arrow__Alternatives");
					put(grammarAccess.getDataTypeAccess().getAlternatives(), "rule__DataType__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getMakeEmfAccess().getGroup(), "rule__MakeEmf__Group__0");
					put(grammarAccess.getMakeEcoreAccess().getGroup(), "rule__MakeEcore__Group__0");
					put(grammarAccess.getMakeImageAccess().getGroup(), "rule__MakeImage__Group__0");
					put(grammarAccess.getSimpleEvoSpanAccess().getGroup(), "rule__SimpleEvoSpan__Group__0");
					put(grammarAccess.getSimpleEvoCospanAccess().getGroup(), "rule__SimpleEvoCospan__Group__0");
					put(grammarAccess.getEvoSpanAccess().getGroup(), "rule__EvoSpan__Group__0");
					put(grammarAccess.getEvoCospanAccess().getGroup(), "rule__EvoCospan__Group__0");
					put(grammarAccess.getInstanceSpecificationAccess().getGroup(), "rule__InstanceSpecification__Group__0");
					put(grammarAccess.getInstanceSpecificationAccess().getGroup_9(), "rule__InstanceSpecification__Group_9__0");
					put(grammarAccess.getInstanceSpecificationAccess().getGroup_9_1(), "rule__InstanceSpecification__Group_9_1__0");
					put(grammarAccess.getConstraintSemanticAccess().getGroup(), "rule__ConstraintSemantic__Group__0");
					put(grammarAccess.getConstraintSemanticAccess().getGroup_2(), "rule__ConstraintSemantic__Group_2__0");
					put(grammarAccess.getConstraintSemanticAccess().getGroup_2_1(), "rule__ConstraintSemantic__Group_2_1__0");
					put(grammarAccess.getSpecificationAccess().getGroup(), "rule__Specification__Group__0");
					put(grammarAccess.getSpecificationAccess().getGroup_7(), "rule__Specification__Group_7__0");
					put(grammarAccess.getSpecificationAccess().getGroup_7_1(), "rule__Specification__Group_7_1__0");
					put(grammarAccess.getConstraintAccess().getGroup(), "rule__Constraint__Group__0");
					put(grammarAccess.getConstraintAccess().getGroup_2(), "rule__Constraint__Group_2__0");
					put(grammarAccess.getConstraintAccess().getGroup_2_1(), "rule__Constraint__Group_2_1__0");
					put(grammarAccess.getConstraintSignatureAccess().getGroup(), "rule__ConstraintSignature__Group__0");
					put(grammarAccess.getConstraintSignatureAccess().getGroup_2(), "rule__ConstraintSignature__Group_2__0");
					put(grammarAccess.getConstraintSignatureAccess().getGroup_2_1(), "rule__ConstraintSignature__Group_2_1__0");
					put(grammarAccess.getMorphismAccess().getGroup(), "rule__Morphism__Group__0");
					put(grammarAccess.getMorphismAccess().getGroup_9(), "rule__Morphism__Group_9__0");
					put(grammarAccess.getMorphismAccess().getGroup_9_1(), "rule__Morphism__Group_9_1__0");
					put(grammarAccess.getMappingNodeAccess().getGroup(), "rule__MappingNode__Group__0");
					put(grammarAccess.getMappingArrowAccess().getGroup(), "rule__MappingArrow__Group__0");
					put(grammarAccess.getExtSubTGraphAccess().getGroup(), "rule__ExtSubTGraph__Group__0");
					put(grammarAccess.getTGraphAccess().getGroup(), "rule__TGraph__Group__0");
					put(grammarAccess.getElementAccess().getGroup_0(), "rule__Element__Group_0__0");
					put(grammarAccess.getElementAccess().getGroup_1(), "rule__Element__Group_1__0");
					put(grammarAccess.getArrowsAccess().getGroup_0(), "rule__Arrows__Group_0__0");
					put(grammarAccess.getArrowAccess().getGroup_0(), "rule__Arrow__Group_0__0");
					put(grammarAccess.getArrowAccess().getGroup_1(), "rule__Arrow__Group_1__0");
					put(grammarAccess.getArrowAccess().getGroup_2(), "rule__Arrow__Group_2__0");
					put(grammarAccess.getNodeAccess().getGroup(), "rule__Node__Group__0");
					put(grammarAccess.getAttributeValueAccess().getGroup(), "rule__AttributeValue__Group__0");
					put(grammarAccess.getDpfIdAccess().getGroup(), "rule__DpfId__Group__0");
					put(grammarAccess.getDpfIdAccess().getGroup_1(), "rule__DpfId__Group_1__0");
					put(grammarAccess.getModelAccess().getDefinitionsAssignment_0(), "rule__Model__DefinitionsAssignment_0");
					put(grammarAccess.getModelAccess().getDefinitionsAssignment_1(), "rule__Model__DefinitionsAssignment_1");
					put(grammarAccess.getMakeEmfAccess().getIdAssignment_1(), "rule__MakeEmf__IdAssignment_1");
					put(grammarAccess.getMakeEcoreAccess().getIdAssignment_1(), "rule__MakeEcore__IdAssignment_1");
					put(grammarAccess.getMakeImageAccess().getIdAssignment_1(), "rule__MakeImage__IdAssignment_1");
					put(grammarAccess.getSimpleEvoSpanAccess().getLhsAssignment_1(), "rule__SimpleEvoSpan__LhsAssignment_1");
					put(grammarAccess.getSimpleEvoSpanAccess().getDiffAssignment_3(), "rule__SimpleEvoSpan__DiffAssignment_3");
					put(grammarAccess.getSimpleEvoSpanAccess().getRhSAssignment_5(), "rule__SimpleEvoSpan__RhSAssignment_5");
					put(grammarAccess.getSimpleEvoSpanAccess().getTypeGraphAssignment_7(), "rule__SimpleEvoSpan__TypeGraphAssignment_7");
					put(grammarAccess.getSimpleEvoCospanAccess().getLhsAssignment_1(), "rule__SimpleEvoCospan__LhsAssignment_1");
					put(grammarAccess.getSimpleEvoCospanAccess().getJointAssignment_3(), "rule__SimpleEvoCospan__JointAssignment_3");
					put(grammarAccess.getSimpleEvoCospanAccess().getRhsAssignment_5(), "rule__SimpleEvoCospan__RhsAssignment_5");
					put(grammarAccess.getSimpleEvoCospanAccess().getTypeGraphAssignment_7(), "rule__SimpleEvoCospan__TypeGraphAssignment_7");
					put(grammarAccess.getEvoSpanAccess().getLhsAssignment_1(), "rule__EvoSpan__LhsAssignment_1");
					put(grammarAccess.getEvoSpanAccess().getRhsAssignment_3(), "rule__EvoSpan__RhsAssignment_3");
					put(grammarAccess.getEvoSpanAccess().getTypeGraphAssignment_5(), "rule__EvoSpan__TypeGraphAssignment_5");
					put(grammarAccess.getEvoCospanAccess().getLhsAssignment_1(), "rule__EvoCospan__LhsAssignment_1");
					put(grammarAccess.getEvoCospanAccess().getRhsAssignment_3(), "rule__EvoCospan__RhsAssignment_3");
					put(grammarAccess.getEvoCospanAccess().getTypeGraphAssignment_5(), "rule__EvoCospan__TypeGraphAssignment_5");
					put(grammarAccess.getInstanceSpecificationAccess().getIdAssignment_0(), "rule__InstanceSpecification__IdAssignment_0");
					put(grammarAccess.getInstanceSpecificationAccess().getModelAssignment_4(), "rule__InstanceSpecification__ModelAssignment_4");
					put(grammarAccess.getInstanceSpecificationAccess().getMetamodelAssignment_6(), "rule__InstanceSpecification__MetamodelAssignment_6");
					put(grammarAccess.getInstanceSpecificationAccess().getConstraintSemanticsAssignment_9_0(), "rule__InstanceSpecification__ConstraintSemanticsAssignment_9_0");
					put(grammarAccess.getInstanceSpecificationAccess().getConstraintSemanticsAssignment_9_1_1(), "rule__InstanceSpecification__ConstraintSemanticsAssignment_9_1_1");
					put(grammarAccess.getChoosenSpecficationAccess().getIdAssignment(), "rule__ChoosenSpecfication__IdAssignment");
					put(grammarAccess.getConstraintSemanticAccess().getIdAssignment_0(), "rule__ConstraintSemantic__IdAssignment_0");
					put(grammarAccess.getConstraintSemanticAccess().getArrowsAssignment_2_0(), "rule__ConstraintSemantic__ArrowsAssignment_2_0");
					put(grammarAccess.getConstraintSemanticAccess().getArrowsAssignment_2_1_1(), "rule__ConstraintSemantic__ArrowsAssignment_2_1_1");
					put(grammarAccess.getConstraintSemanticAccess().getOclAssignment_6(), "rule__ConstraintSemantic__OclAssignment_6");
					put(grammarAccess.getSpecificationAccess().getIdAssignment_0(), "rule__Specification__IdAssignment_0");
					put(grammarAccess.getSpecificationAccess().getGraphAssignment_4(), "rule__Specification__GraphAssignment_4");
					put(grammarAccess.getSpecificationAccess().getConstraintsAssignment_7_0(), "rule__Specification__ConstraintsAssignment_7_0");
					put(grammarAccess.getSpecificationAccess().getConstraintsAssignment_7_1_1(), "rule__Specification__ConstraintsAssignment_7_1_1");
					put(grammarAccess.getChoosenGraphAccess().getIdAssignment(), "rule__ChoosenGraph__IdAssignment");
					put(grammarAccess.getConstraintAccess().getSignatureAssignment_0(), "rule__Constraint__SignatureAssignment_0");
					put(grammarAccess.getConstraintAccess().getArrowsAssignment_2_0(), "rule__Constraint__ArrowsAssignment_2_0");
					put(grammarAccess.getConstraintAccess().getArrowsAssignment_2_1_1(), "rule__Constraint__ArrowsAssignment_2_1_1");
					put(grammarAccess.getConstraintSignatureAccess().getIdAssignment_0(), "rule__ConstraintSignature__IdAssignment_0");
					put(grammarAccess.getConstraintSignatureAccess().getParameterAssignment_2_0(), "rule__ConstraintSignature__ParameterAssignment_2_0");
					put(grammarAccess.getConstraintSignatureAccess().getParameterAssignment_2_1_1(), "rule__ConstraintSignature__ParameterAssignment_2_1_1");
					put(grammarAccess.getMorphismAccess().getDomainAssignment_4(), "rule__Morphism__DomainAssignment_4");
					put(grammarAccess.getMorphismAccess().getCodmainAssignment_6(), "rule__Morphism__CodmainAssignment_6");
					put(grammarAccess.getMorphismAccess().getMappingsAssignment_9_0(), "rule__Morphism__MappingsAssignment_9_0");
					put(grammarAccess.getMorphismAccess().getMappingsAssignment_9_1_1(), "rule__Morphism__MappingsAssignment_9_1_1");
					put(grammarAccess.getDomainAccess().getIdAssignment(), "rule__Domain__IdAssignment");
					put(grammarAccess.getCodomainAccess().getIdAssignment(), "rule__Codomain__IdAssignment");
					put(grammarAccess.getMappingNodeAccess().getDomainAssignment_0(), "rule__MappingNode__DomainAssignment_0");
					put(grammarAccess.getMappingNodeAccess().getCodomainAssignment_2(), "rule__MappingNode__CodomainAssignment_2");
					put(grammarAccess.getMappingArrowAccess().getDomainAssignment_0(), "rule__MappingArrow__DomainAssignment_0");
					put(grammarAccess.getMappingArrowAccess().getCodmainAssignment_2(), "rule__MappingArrow__CodmainAssignment_2");
					put(grammarAccess.getExtSubTGraphAccess().getIdAssignment_0(), "rule__ExtSubTGraph__IdAssignment_0");
					put(grammarAccess.getExtSubTGraphAccess().getExtendsGraphAssignment_4(), "rule__ExtSubTGraph__ExtendsGraphAssignment_4");
					put(grammarAccess.getExtSubTGraphAccess().getElementsAssignment_7(), "rule__ExtSubTGraph__ElementsAssignment_7");
					put(grammarAccess.getChoosenExtSubTGraphAccess().getIdAssignment(), "rule__ChoosenExtSubTGraph__IdAssignment");
					put(grammarAccess.getTGraphAccess().getIdAssignment_0(), "rule__TGraph__IdAssignment_0");
					put(grammarAccess.getTGraphAccess().getTypeGraphAssignment_4(), "rule__TGraph__TypeGraphAssignment_4");
					put(grammarAccess.getTGraphAccess().getElementsAssignment_7(), "rule__TGraph__ElementsAssignment_7");
					put(grammarAccess.getChoosenTGraphAccess().getIdAssignment(), "rule__ChoosenTGraph__IdAssignment");
					put(grammarAccess.getArrowsAccess().getSrAssignment_0_0(), "rule__Arrows__SrAssignment_0_0");
					put(grammarAccess.getArrowsAccess().getIdAssignment_0_2(), "rule__Arrows__IdAssignment_0_2");
					put(grammarAccess.getArrowsAccess().getTypeAssignment_0_4(), "rule__Arrows__TypeAssignment_0_4");
					put(grammarAccess.getArrowsAccess().getNextAssignment_0_6(), "rule__Arrows__NextAssignment_0_6");
					put(grammarAccess.getArrowAccess().getSrAssignment_0_0(), "rule__Arrow__SrAssignment_0_0");
					put(grammarAccess.getArrowAccess().getIdAssignment_0_2(), "rule__Arrow__IdAssignment_0_2");
					put(grammarAccess.getArrowAccess().getTgDataTypeAssignment_0_6(), "rule__Arrow__TgDataTypeAssignment_0_6");
					put(grammarAccess.getArrowAccess().getSrAssignment_1_0(), "rule__Arrow__SrAssignment_1_0");
					put(grammarAccess.getArrowAccess().getIdAssignment_1_2(), "rule__Arrow__IdAssignment_1_2");
					put(grammarAccess.getArrowAccess().getTypeAssignment_1_4(), "rule__Arrow__TypeAssignment_1_4");
					put(grammarAccess.getArrowAccess().getTgValueAssignment_1_6(), "rule__Arrow__TgValueAssignment_1_6");
					put(grammarAccess.getArrowAccess().getSrAssignment_2_0(), "rule__Arrow__SrAssignment_2_0");
					put(grammarAccess.getArrowAccess().getIdAssignment_2_2(), "rule__Arrow__IdAssignment_2_2");
					put(grammarAccess.getArrowAccess().getTypeAssignment_2_4(), "rule__Arrow__TypeAssignment_2_4");
					put(grammarAccess.getArrowAccess().getTgNodeAssignment_2_6(), "rule__Arrow__TgNodeAssignment_2_6");
					put(grammarAccess.getNodeAccess().getIdAssignment_0(), "rule__Node__IdAssignment_0");
					put(grammarAccess.getNodeAccess().getTypeAssignment_2(), "rule__Node__TypeAssignment_2");
					put(grammarAccess.getAttributeValueAccess().getValueAssignment_1(), "rule__AttributeValue__ValueAssignment_1");
					put(grammarAccess.getDpfIdAccess().getNameAssignment_0(), "rule__DpfId__NameAssignment_0");
					put(grammarAccess.getDpfIdAccess().getIdAssignment_1_1(), "rule__DpfId__IdAssignment_1_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			no.hib.dpf.text.ui.contentassist.antlr.internal.InternalDPFTextParser typedParser = (no.hib.dpf.text.ui.contentassist.antlr.internal.InternalDPFTextParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public DPFTextGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DPFTextGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
