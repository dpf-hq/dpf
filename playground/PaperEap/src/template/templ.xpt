«EXTENSION org::eclipse::xtend::util::stdlib::io» 
«EXTENSION template::eap»

«DEFINE main FOR dpf::Specification»
	«EXPAND graph FOR this.graph»
«ENDDEFINE»

«DEFINE graph FOR dpf::Graph»
	«EXPAND activity FOREACH this.getActivitys()»
	«EXPAND choice FOREACH this.getChoices()»
	«EXPAND condition FOREACH this.getConditions()»
	«FILE "Activity.java"»
		public interface Activity{
			//something Activity common
		}
	«ENDFILE»
	«FILE "Sequence.java"»
		public interface Sequence{
			//something Sequence common
		}
	«ENDFILE»
	«FILE "Constraint.java"»
		public interface Constraint{
			boolean check();
		}
	«ENDFILE»
	«FILE "ConstraintIrr.java"»
		public class ConstraintIrr implements Constraint{
			Object o1,o2;
			public ConstraintIrr(Object o1,Object o2){
				this.o1=o1;this.o2=o2;
			}
			public boolean check(){
				return null == o1 || null == o2 || o1.getClass() != o2.getClass();					
			}
		}
	«ENDFILE»
«ENDDEFINE»

«DEFINE activity FOR dpf::Activity»
	«FILE this.name.replaceAll(" ","").toFirstUpper() + ".java"»
		public class «this.name.replaceAll(" ","").toFirstUpper()» implements Activity{
			«FOREACH getASequences() AS e»
				«FILE e.name.replaceAll(" ","").toFirstUpper() + ".java"»
					import java.util.*;
					public class «e.name.replaceAll(" ","").toFirstUpper()» implements Sequence{
						public Activity source, target;
						public List<Constraint> classInvariants = new ArrayList<Constraint>();
						«FOREACH getOneArrowConstraints(this) AS c»
							public List<Constraint> getInvariants(){
								classInvariants.clear();  	
								classInvariants.add(new ConstraintIrr(source,target));
								«REM»In paper: classInvariants.add(new Constraint«c.name»(source,target));«ENDREM»
								return classInvariants;
							}					
						«ENDFOREACH»
						//Do something sequence specific...
					}
				«ENDFILE»
				«e.name.replaceAll(" ","").toFirstUpper()» «e.name.replaceAll(" ","").toLowerCase()»; 
			«ENDFOREACH»
			«FOREACH getAMessages() AS e»
				«FILE e.name.replaceAll(" ","").toFirstUpper() + ".java"»
					public class «e.name.replaceAll(" ","").toFirstUpper()»{
						public «e.target.name.replaceAll(" ","").toFirstUpper()» target;
						//Do something message specific...
					}
				«ENDFILE»
			«ENDFOREACH»
			«FOREACH getAChoiceIns() AS e»
				«FILE e.name.replaceAll(" ","").toFirstUpper() + ".java"»
					public class «e.name.replaceAll(" ","").toFirstUpper()»{
						public «e.target.name.replaceAll(" ","").toFirstUpper()» target;
						//Do something choiceIn specific...
					}
				«ENDFILE»
			«ENDFOREACH»
		}
	«ENDFILE»
«ENDDEFINE»

«DEFINE choice FOR dpf::Choice»
	«FILE this.name.replaceAll(" ","").toFirstUpper() + ".java"»
		public class «this.name.replaceAll(" ","").toFirstUpper()»{
		}
	«ENDFILE»
«ENDDEFINE»

«DEFINE condition FOR dpf::Condition»
	«FILE this.name.replaceAll(" ","").toFirstUpper() + ".java"»
		public class «this.name.replaceAll(" ","").toFirstUpper()»{
		}
	«ENDFILE»	
«ENDDEFINE»